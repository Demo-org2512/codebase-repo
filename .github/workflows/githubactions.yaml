'on':
  push:
    branches:
      - Dev
permissions:
  id-token: write
  contents: read
env:
  gitops: gitops-repo
  deployment: codebase-repo
  username: Demo-org2512
  email_id: vaishnavi.korgaonkar@wohlig.com
  reponame: codebase-repo
  gitopsbranch: Dev
  projectName: Project1
  applicationName: app1
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v2
      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true
      - name: build and push the docker image
        env:
          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID}}
        run: >
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

          docker build -t ${{ secrets.GCR }}/${{ env.reponame }}:${{ github.sha
          }} .

          # docker images

          # docker push ${{ secrets.GCR }}/${{ env.reponame }}:${{ github.sha }}
      - name: Push Docker Image to Artifact Registry
        run: >
          docker push ${{ secrets.GCR }}/${{ env.reponame }}:${{ github.sha }}

          git clone https://${{ secrets.GH_USER }}:${{ secrets.TOKEN
          }}@github.com/${{ env.username }}/${{ env.gitops }}

          cd ${{ env.gitops }}


          git checkout ${{ env.gitopsbranch }}


          git config user.name ${{ secrets.GH_USER }}

          git config user.email ${{ env.email_id }}

          yq e '.spec.template.spec.containers[0].image = "${{ secrets.GCR
          }}/${{ env.reponame }}:${{ github.sha }}"' -i ${{ env.projectName
          }}/templates/${{ env.applicationName }}/deployment.yaml

          git add .

          git commit -m "updating newer image"  

          git push --set-upstream origin ${{ env.gitopsbranch }}
